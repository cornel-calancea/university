----------------------------------------------------------------------------
Â©Corneliu Calancea, 2020

This archive contains the implementation for Homework nr.3 at Communication Protocols, 2020

All work is mine, unless otherwise stated
----------------------------------------------------------------------------
The helpers.c/.h and buffer.c/.h are taken from Lab 10
----------------------------------------------------------------------------
For parsing JSON objects, the Parson library has been used. The main purpose of usage is to create the JSON objects to be sent, and to generate the coresponding string that is attached to the HTTP request. Also, it has been used to check if the JSON object in the response is a JWT, and extract it.
----------------------------------------------------------------------------
The flow of the program :
- The client starts, shows a greeting message
- The IP address of the server is found via DNS, and stored in a global variable
- Next, it enters an infinite loop in which you are asked to give a command and the client executes it(if it's valid, if not - it shows a corresponding message)
- The "getCommand" function parses the command and returns its code
- Given the command code, the switch in main decides which function to call(createAccount, login, enterLibrary, getAllBooks, getBook, addBook, deleteBook, logout or quit)
- Each function may request additional data through command line prompts, some create JSON objects.
- Then, the corresponding request is sent through sendGetRequest/sendPostRequest/sendDeleteRequest function. Each of those function builds the request with the given data, the opens a connection with the server, sends the message, receives the answer, and closes the connection.
- The receiveMessage function gets the answer from the server and shows is in the command line in a more user-friendly format : the HTTP code of the message, and the content of the JSON object/array, if there is one. It also checks if a cookie or a JWT has been received from the server, and if so, it sets the corresponding variables(jwt, cookie).
- JSON objects/arrays are showed in the command line with the showJSON function, which prints the JSON character by character, ignoring accolades, commas and brackets, thus leaving a more human-friendly format
- When the "exit" command is received, the client shows a good-bye message and closes.
----------------------------------------------------------------------------